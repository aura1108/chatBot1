/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Log as PrismaLog } from "@prisma/client";

export class LogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LogCountArgs, "select">): Promise<number> {
    return this.prisma.log.count(args);
  }

  async logs(args: Prisma.LogFindManyArgs): Promise<PrismaLog[]> {
    return this.prisma.log.findMany(args);
  }
  async log(args: Prisma.LogFindUniqueArgs): Promise<PrismaLog | null> {
    return this.prisma.log.findUnique(args);
  }
  async createLog(args: Prisma.LogCreateArgs): Promise<PrismaLog> {
    return this.prisma.log.create(args);
  }
  async updateLog(args: Prisma.LogUpdateArgs): Promise<PrismaLog> {
    return this.prisma.log.update(args);
  }
  async deleteLog(args: Prisma.LogDeleteArgs): Promise<PrismaLog> {
    return this.prisma.log.delete(args);
  }
}
